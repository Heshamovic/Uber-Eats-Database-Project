/*
	Watermark v3.1.3 (March 22, 2011) plugin for jQuery
	http://jquery-watermark.googlecode.com/
	Copyright (c) 2009-2011 Todd Northrop
	http://www.speednet.biz/
	Dual licensed under the MIT or GPL Version 2 licenses.
*/
(function (b, i, n) { var j = /\r/g, l = ["Page_ClientValidate", "__doPostBack"], m = !1, o = "placeholder" in document.createElement("input"); b.watermark = b.watermark || { version: "3.1.3", runOnce: !0, options: { className: "resxManager-watermark", useNative: !0, hideBeforeUnload: !0 }, hide: function (a) { b(a).filter("input:data(watermark),textarea:data(watermark)").each(function () { b.watermark._hide(b(this)) }) }, _hide: function (a, b) { var e = a[0], f = (e.value || "").replace(j, ""), c = a.data("watermarkText") || "", h = a.data("watermarkMaxLength") || 0, g = a.data("watermarkClass"); if (c.length && f == c) { e.value = ""; if (a.data("watermarkPassword") && "text" === (a.attr("type") || "")) e = a.data("watermarkPassword") || [], f = a.parent() || [], e.length && f.length && (f[0].removeChild(a[0]), f[0].appendChild(e[0]), a = e); h && (a.attr("maxLength", h), a.removeData("watermarkMaxLength")); b && (a.attr("autocomplete", "off"), i.setTimeout(function () { a.select() }, 1)) } g && a.removeClass(g) }, show: function (a) { b(a).filter("input:data(watermark),textarea:data(watermark)").each(function () { b.watermark._show(b(this)) }) }, _show: function (a) { var d = a[0], e = (d.value || "").replace(j, ""), f = a.data("watermarkText") || "", c = a.attr("type") || "", h = a.data("watermarkClass"); if ((0 == e.length || e == f) && !a.data("watermarkFocus")) { m = !0; if (a.data("watermarkPassword") && "password" === c) { var e = a.data("watermarkPassword") || [], g = a.parent() || []; e.length && g.length && (g[0].removeChild(a[0]), g[0].appendChild(e[0]), a = e, a.attr("maxLength", f.length), d = a[0]) } if ("text" === c || "search" === c) c = a.attr("maxLength") || 0, 0 < c && f.length > c && (a.data("watermarkMaxLength", c), a.attr("maxLength", f.length)); h && a.addClass(h); d.value = f } else b.watermark._hide(a) }, hideAll: function () { m && (b.watermark.hide("input:text,input:password,input[type=search],input:not([type]),textarea"), m = !1) }, showAll: function () { b.watermark.show("input:text,input:password,input[type=search],input:not([type]),textarea") } }; b.fn.watermark = b.fn.watermark || function (a, d) { if (!this.length) return this; var e = !1, f = "string" === typeof a; f && (a = a.replace(j, "")); "object" === typeof d ? (e = "string" === typeof d.className, d = b.extend({}, b.watermark.options, d)) : "string" === typeof d ? (e = !0, d = b.extend({}, b.watermark.options, { className: d })) : d = b.watermark.options; "function" !== typeof d.useNative && (d.useNative = d.useNative ? function () { return true } : function () { return false }); return this.each(function () { var c = b(this); if (c.is("input:text,input:password,input[type=search],input:not([type]),textarea")) { if (c.data("watermark")) { if (f || e) { b.watermark._hide(c); f && c.data("watermarkText", a); e && c.data("watermarkClass", d.className) } } else { if (o && d.useNative.call(this, c) && (c.attr("tagName") || "") !== "TEXTAREA") { f && c.attr("placeholder", a); return } c.data("watermarkText", f ? a : ""); c.data("watermarkClass", d.className); c.data("watermark", 1); if ((c.attr("type") || "") === "password") { var h = c.wrap("<span>").parent(), g = b(h.html().replace(/type=["']?password["']?/i, 'type="text"')); g.data("watermarkText", c.data("watermarkText")); g.data("watermarkClass", c.data("watermarkClass")); g.data("watermark", 1); g.attr("maxLength", a.length); g.focus(function () { b.watermark._hide(g, true) }).bind("dragenter", function () { b.watermark._hide(g) }).bind("dragend", function () { i.setTimeout(function () { g.blur() }, 1) }); c.blur(function () { b.watermark._show(c) }).bind("dragleave", function () { b.watermark._show(c) }); g.data("watermarkPassword", c); c.data("watermarkPassword", g) } else c.focus(function () { c.data("watermarkFocus", 1); b.watermark._hide(c, true) }).blur(function () { c.data("watermarkFocus", 0); b.watermark._show(c) }).bind("dragenter", function () { b.watermark._hide(c) }).bind("dragleave", function () { b.watermark._show(c) }).bind("dragend", function () { i.setTimeout(function () { b.watermark._show(c) }, 1) }).bind("drop", function (a) { var b = c[0], a = a.originalEvent.dataTransfer.getData("Text"); if ((b.value || "").replace(j, "").replace(a, "") === c.data("watermarkText")) b.value = a; c.focus() }); if (this.form) { var h = this.form, k = b(h); if (!k.data("watermarkSubmit")) { k.submit(b.watermark.hideAll); if (h.submit) { k.data("watermarkSubmit", h.submit); h.submit = function (a, c) { return function () { var d = c.data("watermarkSubmit"); b.watermark.hideAll(); d.apply ? d.apply(a, Array.prototype.slice.call(arguments)) : d() } }(h, k) } else { k.data("watermarkSubmit", 1); h.submit = function (a) { return function () { b.watermark.hideAll(); delete a.submit; a.submit() } }(h) } } } } b.watermark._show(c) } }) }; b.watermark.runOnce && (b.watermark.runOnce = !1, b.extend(b.expr[":"], { data: function (a, d, e) { return !!b.data(a, e[3]) } }), function (a) { b.fn.val = function () { if (!this.length) return arguments.length ? this : n; if (arguments.length) return a.apply(this, arguments), b.watermark.show(this), this; if (this.data("watermark")) { var d = (this[0].value || "").replace(j, ""); return d === (this.data("watermarkText") || "") ? "" : d } return a.apply(this, arguments) } }(b.fn.val), l.length && b(function () { var a, d, e; for (a = l.length - 1; 0 <= a; a--) d = l[a], e = i[d], "function" === typeof e && (i[d] = function (a) { return function () { b.watermark.hideAll(); return a.apply(null, Array.prototype.slice.call(arguments)) } }(e)) }), b(i).bind("beforeunload", function () { b.watermark.options.hideBeforeUnload && b.watermark.hideAll() })) })(jQuery, window);